[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ssunet"
version = "0.1.0"
description = "A Self-Supervised U-Net for denoising SPAD images."
authors = [{ name = "Yehe Liu", email = "yehe@case.edu" }]
license = { text = "MIT License" }
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"
dependencies = [
    "torch",
    "torchvision",
    "lightning",
    "numpy < 2",
    "h5py",
    "pyyaml",
    "tqdm",
    "matplotlib",
    "seaborn",
    "pandas",
    "pyiqa"
]

[project.optional-dependencies]
dev = ["pytest", "ruff", "tox", "pre-commit"]

[tool.hatch.build.targets.wheel]
packages = ["ssunet"]

[tool.pytest.ini_options]
pythonpath = [".", "src"]
testpaths = ["tests"]

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = ["*.ipynb"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "S",   # bandit
    "BLE", # flake8-blind-except
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RUF", # Ruff-specific rules
    "DTZ", # flake8-datetimez
    "ERA", # eradicate
    "TRY", # tryceratops
    "C90", # mccabe
]
ignore = ["D100", "D104", "D107"]  # Ignore missing docstrings in certain cases

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]

[tool.ruff.lint.isort]
known-first-party = ["ssunet"]

[tool.ruff.lint.pydocstyle]
convention = "google"
